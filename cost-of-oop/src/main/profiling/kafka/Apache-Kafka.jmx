<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Apache Kafka Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Single User" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Java Request" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="bootstrap.servers" elementType="Argument">
                  <stringProp name="Argument.name">bootstrap.servers</stringProp>
                  <stringProp name="Argument.value">localhost:9092</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zookeeper.servers" elementType="Argument">
                  <stringProp name="Argument.name">zookeeper.servers</stringProp>
                  <stringProp name="Argument.value">&lt;Zookeeper List&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="kafka.topic.name" elementType="Argument">
                  <stringProp name="Argument.name">kafka.topic.name</stringProp>
                  <stringProp name="Argument.value">quickstart-events</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="key.serializer" elementType="Argument">
                  <stringProp name="Argument.name">key.serializer</stringProp>
                  <stringProp name="Argument.value">org.apache.kafka.common.serialization.StringSerializer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="value.serializer" elementType="Argument">
                  <stringProp name="Argument.name">value.serializer</stringProp>
                  <stringProp name="Argument.value">org.apache.kafka.common.serialization.StringSerializer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="compression.type" elementType="Argument">
                  <stringProp name="Argument.name">compression.type</stringProp>
                  <stringProp name="Argument.value">none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="batch.size" elementType="Argument">
                  <stringProp name="Argument.name">batch.size</stringProp>
                  <stringProp name="Argument.value">16384</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="linger.ms" elementType="Argument">
                  <stringProp name="Argument.name">linger.ms</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="buffer.memory" elementType="Argument">
                  <stringProp name="Argument.name">buffer.memory</stringProp>
                  <stringProp name="Argument.value">33554432</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acks" elementType="Argument">
                  <stringProp name="Argument.name">acks</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="send.buffer.bytes" elementType="Argument">
                  <stringProp name="Argument.name">send.buffer.bytes</stringProp>
                  <stringProp name="Argument.value">131072</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="receive.buffer.bytes" elementType="Argument">
                  <stringProp name="Argument.name">receive.buffer.bytes</stringProp>
                  <stringProp name="Argument.value">32768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="security.protocol" elementType="Argument">
                  <stringProp name="Argument.name">security.protocol</stringProp>
                  <stringProp name="Argument.value">PLAINTEXT</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="message.placeholder.key" elementType="Argument">
                  <stringProp name="Argument.name">message.placeholder.key</stringProp>
                  <stringProp name="Argument.value">MESSAGE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="kerberos.auth.enabled" elementType="Argument">
                  <stringProp name="Argument.name">kerberos.auth.enabled</stringProp>
                  <stringProp name="Argument.value">NO</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="java.security.auth.login.config" elementType="Argument">
                  <stringProp name="Argument.name">java.security.auth.login.config</stringProp>
                  <stringProp name="Argument.value">&lt;JAAS File Location&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="java.security.krb5.conf" elementType="Argument">
                  <stringProp name="Argument.name">java.security.krb5.conf</stringProp>
                  <stringProp name="Argument.value">&lt;krb5.conf location&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sasl.kerberos.service.name" elementType="Argument">
                  <stringProp name="Argument.name">sasl.kerberos.service.name</stringProp>
                  <stringProp name="Argument.value">kafka</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.gslab.pepper.sampler.PepperBoxKafkaSampler</stringProp>
          </JavaSampler>
          <hashTree/>
          <com.gslab.pepper.config.plaintext.PlainTextConfigElement guiclass="TestBeanGUI" testclass="com.gslab.pepper.config.plaintext.PlainTextConfigElement" testname="Pepper-Box PlainText Config" enabled="true">
            <stringProp name="jsonSchema">{
	&quot;messageId&quot;:&quot;1&quot;
}</stringProp>
            <stringProp name="placeHolder">MESSAGE</stringProp>
          </com.gslab.pepper.config.plaintext.PlainTextConfigElement>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">50</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
